{"ast":null,"code":"var _jsxFileName = \"/Users/adesolaadewole/Desktop/blog/client/src/components/singlePost/SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport './SinglePost.css';\nimport { useLocation } from \"react-router\";\nimport { useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const client = axios.create({\n    baseURL: \"http://localhost:5000/api/\"\n  });\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await client.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [client, path]);\n  const handleDelete = async () => {\n    try {\n      await client.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await client.update(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      // window.location.reload()\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon\",\n            class: \"far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon\",\n            class: \"far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["useLocation","useContext","useEffect","useState","axios","Link","Context","jsxDEV","_jsxDEV","SinglePost","_s","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","client","create","baseURL","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","error","handleUpdate","update","className","children","photo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","autoFocus","onChange","e","target","class","onClick","to","Date","createdAt","toDateString","_c","$RefreshReg$"],"sources":["/Users/adesolaadewole/Desktop/blog/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import './SinglePost.css'\nimport { useLocation } from \"react-router\"\nimport { useContext, useEffect, useState } from 'react';\nimport axios from \"axios\"\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\n\nexport default function SinglePost() {\n  const location = useLocation()\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({})\n  const PF = \"http://localhost:5000/images/\";\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\")\n  const [desc, setDesc] = useState(\"\")\n  const [updateMode, setUpdateMode] = useState(false)\n\n  const client = axios.create({\n    baseURL: \"http://localhost:5000/api/\"\n  })\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await client.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title)\n      setDesc(res.data.desc)\n    }\n    getPost();\n  }, [client, path]);\n\n  const handleDelete = async () => {\n    try{\n      await client.delete(`/posts/${post._id}`, {\n        data: {username: user.username},\n      });\n      window.location.replace(\"/\");\n    } catch(error) {}\n  }\n\n  const handleUpdate = async () => {\n    try {\n      await client.update(`/posts/${post._id}`, {\n        username: user.username,\n        title, \n        desc,\n      })\n      // window.location.reload()\n      setUpdateMode(false)\n    } catch (error) {\n      \n    }\n  }\n  return (\n    <div className='singlePost'>\n      <div className=\"singlePostWrapper\">\n        {post.photo && (\n        <img \n        src={ PF + post.photo} \n        alt=\"\" \n        className='singlePostImg' \n        />\n        )}\n        { updateMode ? <input\n         type=\"text\" value={title} \n         className=\"singlePostTitleInput\" \n         autoFocus \n         onChange={(e) => setTitle(e.target.value)} \n         /> : (\n            <h1 className=\"singlePostTitle\">\n        {title}\n        {post.username === user?.username && (\n        <div className=\"singlePostEdit\">\n            <i className=\"singlePostIcon\" class=\"far fa-edit\" onClick={() => setUpdateMode(true)}></i>\n            <i className=\"singlePostIcon\" class=\"far fa-trash-alt\" onClick={handleDelete}></i>\n        </div>\n        )}\n        </h1>\n        )}\n      \n        <div className=\"singlePostInfo\">\n            <span className='singlePostAuthor'>\n                Author: \n                <Link to={`/?user=${post.username}`} className='link'>\n                <b>{post.username}</b>\n                </Link>\n                </span>\n            <span className='singlePostDate'>{new Date(post.createdAt).toDateString()}</span>\n        </div>\n        {updateMode ? (\n          <textarea className='singlePostDescInput' value={desc} onChange={(e) => setDesc(e.target.value)} />\n        ) : (\n          <p className='singlePostDesc'>{desc}</p>\n        )}\n        {updateMode && (\n          <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>\n        )} \n      </div> \n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,IAAI,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMc,EAAE,GAAG,+BAA+B;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAGjB,UAAU,CAACK,OAAO,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMsB,MAAM,GAAGrB,KAAK,CAACsB,MAAM,CAAC;IAC1BC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACd,MAAM0B,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACK,GAAG,CAAC,SAAS,GAAGlB,IAAI,CAAC;MAC9CI,OAAO,CAACa,GAAG,CAACE,IAAI,CAAC;MACjBX,QAAQ,CAACS,GAAG,CAACE,IAAI,CAACZ,KAAK,CAAC;MACxBG,OAAO,CAACO,GAAG,CAACE,IAAI,CAACV,IAAI,CAAC;IACxB,CAAC;IACDO,OAAO,EAAE;EACX,CAAC,EAAE,CAACH,MAAM,EAAEb,IAAI,CAAC,CAAC;EAElB,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAG;MACD,MAAMP,MAAM,CAACQ,MAAM,CAAE,UAASlB,IAAI,CAACmB,GAAI,EAAC,EAAE;QACxCH,IAAI,EAAE;UAACI,QAAQ,EAAEjB,IAAI,CAACiB;QAAQ;MAChC,CAAC,CAAC;MACFC,MAAM,CAACzB,QAAQ,CAAC0B,OAAO,CAAC,GAAG,CAAC;IAC9B,CAAC,CAAC,OAAMC,KAAK,EAAE,CAAC;EAClB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMd,MAAM,CAACe,MAAM,CAAE,UAASzB,IAAI,CAACmB,GAAI,EAAC,EAAE;QACxCC,QAAQ,EAAEjB,IAAI,CAACiB,QAAQ;QACvBhB,KAAK;QACLE;MACF,CAAC,CAAC;MACF;MACAG,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC,OAAOc,KAAK,EAAE,CAEhB;EACF,CAAC;EACD,oBACE9B,OAAA;IAAKiC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBlC,OAAA;MAAKiC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC/B3B,IAAI,CAAC4B,KAAK,iBACXnC,OAAA;QACAoC,GAAG,EAAG3B,EAAE,GAAGF,IAAI,CAAC4B,KAAM;QACtBE,GAAG,EAAC,EAAE;QACNJ,SAAS,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExB,EACC1B,UAAU,gBAAGf,OAAA;QACd0C,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEhC,KAAM;QACzBsB,SAAS,EAAC,sBAAsB;QAChCW,SAAS;QACTC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC,gBACCzC,OAAA;QAAIiC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAClCvB,KAAK,EACLJ,IAAI,CAACoB,QAAQ,MAAKjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,QAAQ,kBACjC3B,OAAA;UAAKiC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BlC,OAAA;YAAGiC,SAAS,EAAC,gBAAgB;YAACe,KAAK,EAAC,aAAa;YAACC,OAAO,EAAEA,CAAA,KAAMjC,aAAa,CAAC,IAAI;UAAE;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC1FzC,OAAA;YAAGiC,SAAS,EAAC,gBAAgB;YAACe,KAAK,EAAC,kBAAkB;YAACC,OAAO,EAAEzB;UAAa;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAErF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEA,eAEDzC,OAAA;QAAKiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BlC,OAAA;UAAMiC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,SAE/B,eAAAlC,OAAA,CAACH,IAAI;YAACqD,EAAE,EAAG,UAAS3C,IAAI,CAACoB,QAAS,EAAE;YAACM,SAAS,EAAC,MAAM;YAAAC,QAAA,eACrDlC,OAAA;cAAAkC,QAAA,EAAI3B,IAAI,CAACoB;YAAQ;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACf;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACA,eACXzC,OAAA;UAAMiC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAE,IAAIiB,IAAI,CAAC5C,IAAI,CAAC6C,SAAS,CAAC,CAACC,YAAY;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/E,EACL1B,UAAU,gBACTf,OAAA;QAAUiC,SAAS,EAAC,qBAAqB;QAACU,KAAK,EAAE9B,IAAK;QAACgC,QAAQ,EAAGC,CAAC,IAAKhC,OAAO,CAACgC,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,gBAEnGzC,OAAA;QAAGiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAErB;MAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpC,EACA1B,UAAU,iBACTf,OAAA;QAAQiC,SAAS,EAAC,kBAAkB;QAACgB,OAAO,EAAElB,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACvC,EAAA,CA7FuBD,UAAU;EAAA,QACfT,WAAW;AAAA;AAAA8D,EAAA,GADNrD,UAAU;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}